memberSearchIndex = [{"p":"de.bcxp.challenge","c":"App","l":"App()","u":"%3Cinit%3E()"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"area"},{"p":"de.bcxp.challenge.countries","c":"CountryCsvParser","l":"AREA"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"COLLECTION_EXCEPTION"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"COLLECTION_LOG"},{"p":"de.bcxp.challenge.common.model.csv","c":"NumericComparisonType","l":"comparator"},{"p":"de.bcxp.challenge","c":"App","l":"COUNTRIES_CSV_PATH"},{"p":"de.bcxp.challenge.countries","c":"CountryAnalyser","l":"CountryAnalyser()","u":"%3Cinit%3E()"},{"p":"de.bcxp.challenge.countries","c":"CountryCsvParser","l":"CountryCsvParser(char, Locale)","u":"%3Cinit%3E(char,java.util.Locale)"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"CountryEntry(String, long, double)","u":"%3Cinit%3E(java.lang.String,long,double)"},{"p":"de.bcxp.challenge.common.analysis.csv","c":"CsvAnalysisUtility","l":"CsvAnalysisUtility()","u":"%3Cinit%3E()"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"CsvParser(char, Locale)","u":"%3Cinit%3E(char,java.util.Locale)"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"delimiter"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"DOCUMENT_EXCEPTION"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"DOCUMENT_LOG"},{"p":"de.bcxp.challenge.common.model","c":"Document","l":"Document(List<DocumentEntry>)","u":"%3Cinit%3E(java.util.List)"},{"p":"de.bcxp.challenge.common.exceptions","c":"DocumentCreationException","l":"DocumentCreationException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"de.bcxp.challenge.common.model","c":"DocumentEntry","l":"DocumentEntry(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"de.bcxp.challenge.common.model","c":"Document","l":"entries"},{"p":"de.bcxp.challenge.common.analysis.csv","c":"CsvAnalysisUtility","l":"getAllDocumentEntriesWithBestScore(Set<IEntryWithComparableNumericTuple>, double)","u":"getAllDocumentEntriesWithBestScore(java.util.Set,double)"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"getArea()"},{"p":"de.bcxp.challenge.common.analysis","c":"IDocumentAnalyser","l":"getBestMatches(Document)","u":"getBestMatches(de.bcxp.challenge.common.model.Document)"},{"p":"de.bcxp.challenge.countries","c":"CountryAnalyser","l":"getBestMatches(Document)","u":"getBestMatches(de.bcxp.challenge.common.model.Document)"},{"p":"de.bcxp.challenge.weather","c":"WeatherAnalyser","l":"getBestMatches(Document)","u":"getBestMatches(de.bcxp.challenge.common.model.Document)"},{"p":"de.bcxp.challenge.common.analysis.csv","c":"CsvAnalysisUtility","l":"getBestMatchesForNumericColumnComparison(Document, NumericComparisonType)","u":"getBestMatchesForNumericColumnComparison(de.bcxp.challenge.common.model.Document,de.bcxp.challenge.common.model.csv.NumericComparisonType)"},{"p":"de.bcxp.challenge","c":"App","l":"getBestMatchFromDocument(String, IDocumentParser, IDocumentAnalyser)","u":"getBestMatchFromDocument(java.lang.String,de.bcxp.challenge.common.documentParsing.IDocumentParser,de.bcxp.challenge.common.analysis.IDocumentAnalyser)"},{"p":"de.bcxp.challenge.common.model.csv","c":"IEntryWithComparableNumericTuple","l":"getBestMatchScore()"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"getBestMatchScore()"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"getBestMatchScore()"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"getCountry()"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"getDay()"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"getDelimiter()"},{"p":"de.bcxp.challenge.common.utility","c":"StringParsingUtility","l":"getDoubleFromString(String, Locale)","u":"getDoubleFromString(java.lang.String,java.util.Locale)"},{"p":"de.bcxp.challenge.common.model","c":"Document","l":"getEntries()"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"getEntriesFromRecords(Iterable<CSVRecord>)","u":"getEntriesFromRecords(java.lang.Iterable)"},{"p":"de.bcxp.challenge.countries","c":"CountryCsvParser","l":"getEntriesFromRecords(Iterable<CSVRecord>)","u":"getEntriesFromRecords(java.lang.Iterable)"},{"p":"de.bcxp.challenge.weather","c":"WeatherCsvParser","l":"getEntriesFromRecords(Iterable<CSVRecord>)","u":"getEntriesFromRecords(java.lang.Iterable)"},{"p":"de.bcxp.challenge.common.analysis.csv","c":"CsvAnalysisUtility","l":"getEntriesWithComparableNumericTuples(Document)","u":"getEntriesWithComparableNumericTuples(de.bcxp.challenge.common.model.Document)"},{"p":"de.bcxp.challenge.common.model","c":"DocumentEntry","l":"getId()"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"getLocale()"},{"p":"de.bcxp.challenge.common.utility","c":"StringParsingUtility","l":"getLongFromString(String, Locale)","u":"getLongFromString(java.lang.String,java.util.Locale)"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"getMaxTemp()"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"getMinTemp()"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"getPopulation()"},{"p":"de.bcxp.challenge.common.model","c":"DocumentEntry","l":"id"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"locale"},{"p":"de.bcxp.challenge","c":"App","l":"logger"},{"p":"de.bcxp.challenge.common.analysis.csv","c":"CsvAnalysisUtility","l":"logger"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"logger"},{"p":"de.bcxp.challenge.common.model","c":"Document","l":"logger"},{"p":"de.bcxp.challenge.common.model","c":"DocumentEntry","l":"logger"},{"p":"de.bcxp.challenge.common.utility","c":"StringParsingUtility","l":"logger"},{"p":"de.bcxp.challenge.countries","c":"CountryAnalyser","l":"logger"},{"p":"de.bcxp.challenge.countries","c":"CountryCsvParser","l":"logger"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"logger"},{"p":"de.bcxp.challenge.weather","c":"WeatherAnalyser","l":"logger"},{"p":"de.bcxp.challenge.weather","c":"WeatherCsvParser","l":"logger"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"logger"},{"p":"de.bcxp.challenge","c":"App","l":"main(String...)","u":"main(java.lang.String...)"},{"p":"de.bcxp.challenge.common.model.csv","c":"NumericComparisonType","l":"MAX"},{"p":"de.bcxp.challenge.weather","c":"WeatherCsvParser","l":"MAX_TEMP"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"maxTemp"},{"p":"de.bcxp.challenge.common.model.csv","c":"NumericComparisonType","l":"MIN"},{"p":"de.bcxp.challenge.weather","c":"WeatherCsvParser","l":"MIN_TEMP"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"minTemp"},{"p":"de.bcxp.challenge.countries","c":"CountryCsvParser","l":"NAME"},{"p":"de.bcxp.challenge.weather","c":"WeatherCsvParser","l":"NAME"},{"p":"de.bcxp.challenge.common.model.csv","c":"NumericComparisonType","l":"NumericComparisonType(Comparator<Double>)","u":"%3Cinit%3E(java.util.Comparator)"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"ParameterValidationUtility()","u":"%3Cinit%3E()"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"parseDocument(String)","u":"parseDocument(java.lang.String)"},{"p":"de.bcxp.challenge.common.documentParsing","c":"IDocumentParser","l":"parseDocument(String)","u":"parseDocument(java.lang.String)"},{"p":"de.bcxp.challenge.common.utility","c":"StringParsingUtility","l":"parseNumber(String, Locale)","u":"parseNumber(java.lang.String,java.util.Locale)"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"population"},{"p":"de.bcxp.challenge.countries","c":"CountryCsvParser","l":"POPULATION"},{"p":"de.bcxp.challenge.common.documentParsing.csv","c":"CsvParser","l":"readFileWithHeader(String)","u":"readFileWithHeader(java.lang.String)"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"STRING_EXCEPTION"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"STRING_LOG"},{"p":"de.bcxp.challenge.common.utility","c":"StringParsingUtility","l":"StringParsingUtility()","u":"%3Cinit%3E()"},{"p":"de.bcxp.challenge.common.model","c":"Document","l":"toString()"},{"p":"de.bcxp.challenge.countries","c":"CountryEntry","l":"toString()"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"toString()"},{"p":"de.bcxp.challenge.common.utility","c":"StringParsingUtility","l":"validateCandidateString(String)","u":"validateCandidateString(java.lang.String)"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"validateDocument(Document, Logger, String, String)","u":"validateDocument(de.bcxp.challenge.common.model.Document,org.apache.logging.log4j.Logger,java.lang.String,java.lang.String)"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"validateEntries(Collection<? extends DocumentEntry>, boolean, Logger, String, String)","u":"validateEntries(java.util.Collection,boolean,org.apache.logging.log4j.Logger,java.lang.String,java.lang.String)"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"validateNumericTupleDocumentEntries(List<DocumentEntry>, Logger)","u":"validateNumericTupleDocumentEntries(java.util.List,org.apache.logging.log4j.Logger)"},{"p":"de.bcxp.challenge.common.utility","c":"ParameterValidationUtility","l":"validateString(String, Logger, String, String)","u":"validateString(java.lang.String,org.apache.logging.log4j.Logger,java.lang.String,java.lang.String)"},{"p":"de.bcxp.challenge.common.model.csv","c":"NumericComparisonType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"de.bcxp.challenge.common.model.csv","c":"NumericComparisonType","l":"values()"},{"p":"de.bcxp.challenge","c":"App","l":"WEATHER_CSV_PATH"},{"p":"de.bcxp.challenge.weather","c":"WeatherAnalyser","l":"WeatherAnalyser()","u":"%3Cinit%3E()"},{"p":"de.bcxp.challenge.weather","c":"WeatherCsvParser","l":"WeatherCsvParser(char, Locale)","u":"%3Cinit%3E(char,java.util.Locale)"},{"p":"de.bcxp.challenge.weather","c":"WeatherEntry","l":"WeatherEntry(String, double, double)","u":"%3Cinit%3E(java.lang.String,double,double)"}];updateSearchResults();